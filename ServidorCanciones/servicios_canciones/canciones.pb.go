// Especifica la sintaxis de Protocol Buffers que estamos usando.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: canciones.proto

// Define el paquete para evitar conflictos de nombres.

package servicios_canciones

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Representa un género musical.
type GeneroDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nombre string `protobuf:"bytes,2,opt,name=nombre,proto3" json:"nombre,omitempty"`
}

func (x *GeneroDTO) Reset() {
	*x = GeneroDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneroDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneroDTO) ProtoMessage() {}

func (x *GeneroDTO) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneroDTO.ProtoReflect.Descriptor instead.
func (*GeneroDTO) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{0}
}

func (x *GeneroDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GeneroDTO) GetNombre() string {
	if x != nil {
		return x.Nombre
	}
	return ""
}

// Representa la información completa de una canción.
type CancionDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Titulo          string     `protobuf:"bytes,2,opt,name=titulo,proto3" json:"titulo,omitempty"`
	Artista         string     `protobuf:"bytes,3,opt,name=artista,proto3" json:"artista,omitempty"`
	AnioLanzamiento int32      `protobuf:"varint,4,opt,name=anio_lanzamiento,json=anioLanzamiento,proto3" json:"anio_lanzamiento,omitempty"`
	Duracion        string     `protobuf:"bytes,5,opt,name=duracion,proto3" json:"duracion,omitempty"`
	Genero          *GeneroDTO `protobuf:"bytes,6,opt,name=genero,proto3" json:"genero,omitempty"`
}

func (x *CancionDTO) Reset() {
	*x = CancionDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancionDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancionDTO) ProtoMessage() {}

func (x *CancionDTO) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancionDTO.ProtoReflect.Descriptor instead.
func (*CancionDTO) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{1}
}

func (x *CancionDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancionDTO) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

func (x *CancionDTO) GetArtista() string {
	if x != nil {
		return x.Artista
	}
	return ""
}

func (x *CancionDTO) GetAnioLanzamiento() int32 {
	if x != nil {
		return x.AnioLanzamiento
	}
	return 0
}

func (x *CancionDTO) GetDuracion() string {
	if x != nil {
		return x.Duracion
	}
	return ""
}

func (x *CancionDTO) GetGenero() *GeneroDTO {
	if x != nil {
		return x.Genero
	}
	return nil
}

// Mensaje para representar una canción en una lista (más ligero).
type CancionInfoListaDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Titulo  string `protobuf:"bytes,2,opt,name=titulo,proto3" json:"titulo,omitempty"`
	Artista string `protobuf:"bytes,3,opt,name=artista,proto3" json:"artista,omitempty"`
}

func (x *CancionInfoListaDTO) Reset() {
	*x = CancionInfoListaDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancionInfoListaDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancionInfoListaDTO) ProtoMessage() {}

func (x *CancionInfoListaDTO) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancionInfoListaDTO.ProtoReflect.Descriptor instead.
func (*CancionInfoListaDTO) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{2}
}

func (x *CancionInfoListaDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancionInfoListaDTO) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

func (x *CancionInfoListaDTO) GetArtista() string {
	if x != nil {
		return x.Artista
	}
	return ""
}

// Mensaje para peticiones que no necesitan parámetros.
type SolicitudVacia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SolicitudVacia) Reset() {
	*x = SolicitudVacia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolicitudVacia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolicitudVacia) ProtoMessage() {}

func (x *SolicitudVacia) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolicitudVacia.ProtoReflect.Descriptor instead.
func (*SolicitudVacia) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{3}
}

// Respuesta que contiene una lista de géneros.
type RespuestaListaGeneros struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generos []*GeneroDTO `protobuf:"bytes,1,rep,name=generos,proto3" json:"generos,omitempty"`
}

func (x *RespuestaListaGeneros) Reset() {
	*x = RespuestaListaGeneros{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespuestaListaGeneros) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespuestaListaGeneros) ProtoMessage() {}

func (x *RespuestaListaGeneros) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespuestaListaGeneros.ProtoReflect.Descriptor instead.
func (*RespuestaListaGeneros) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{4}
}

func (x *RespuestaListaGeneros) GetGeneros() []*GeneroDTO {
	if x != nil {
		return x.Generos
	}
	return nil
}

// Petición para obtener canciones de un género específico.
type SolicitudPorGenero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdGenero int32 `protobuf:"varint,1,opt,name=id_genero,json=idGenero,proto3" json:"id_genero,omitempty"`
}

func (x *SolicitudPorGenero) Reset() {
	*x = SolicitudPorGenero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolicitudPorGenero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolicitudPorGenero) ProtoMessage() {}

func (x *SolicitudPorGenero) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolicitudPorGenero.ProtoReflect.Descriptor instead.
func (*SolicitudPorGenero) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{5}
}

func (x *SolicitudPorGenero) GetIdGenero() int32 {
	if x != nil {
		return x.IdGenero
	}
	return 0
}

// Respuesta que contiene una lista de canciones.
type RespuestaListaCanciones struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Canciones []*CancionInfoListaDTO `protobuf:"bytes,1,rep,name=canciones,proto3" json:"canciones,omitempty"`
}

func (x *RespuestaListaCanciones) Reset() {
	*x = RespuestaListaCanciones{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespuestaListaCanciones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespuestaListaCanciones) ProtoMessage() {}

func (x *RespuestaListaCanciones) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespuestaListaCanciones.ProtoReflect.Descriptor instead.
func (*RespuestaListaCanciones) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{6}
}

func (x *RespuestaListaCanciones) GetCanciones() []*CancionInfoListaDTO {
	if x != nil {
		return x.Canciones
	}
	return nil
}

// Petición para obtener los detalles de una canción específica.
type SolicitudPorCancion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdCancion int32 `protobuf:"varint,1,opt,name=id_cancion,json=idCancion,proto3" json:"id_cancion,omitempty"`
}

func (x *SolicitudPorCancion) Reset() {
	*x = SolicitudPorCancion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_canciones_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolicitudPorCancion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolicitudPorCancion) ProtoMessage() {}

func (x *SolicitudPorCancion) ProtoReflect() protoreflect.Message {
	mi := &file_canciones_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolicitudPorCancion.ProtoReflect.Descriptor instead.
func (*SolicitudPorCancion) Descriptor() ([]byte, []int) {
	return file_canciones_proto_rawDescGZIP(), []int{7}
}

func (x *SolicitudPorCancion) GetIdCancion() int32 {
	if x != nil {
		return x.IdCancion
	}
	return 0
}

var File_canciones_proto protoreflect.FileDescriptor

var file_canciones_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x09,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x6d,
	0x62, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x6d, 0x62, 0x72,
	0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x69, 0x6f, 0x5f, 0x6c, 0x61, 0x6e, 0x7a, 0x61,
	0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6e,
	0x69, 0x6f, 0x4c, 0x61, 0x6e, 0x7a, 0x61, 0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x44, 0x54, 0x4f, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x61,
	0x22, 0x10, 0x0a, 0x0e, 0x53, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64, 0x56, 0x61, 0x63,
	0x69, 0x61, 0x22, 0x47, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x44,
	0x54, 0x4f, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x73, 0x22, 0x31, 0x0a, 0x12, 0x53,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64, 0x50, 0x6f, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x22, 0x57,
	0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x61,
	0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x52, 0x09, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x13, 0x53, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x75, 0x64, 0x50, 0x6f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x32, 0x91, 0x02,
	0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x69, 0x6f, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f,
	0x6e, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x6f, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73,
	0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64, 0x56, 0x61, 0x63, 0x69, 0x61, 0x1a,
	0x20, 0x2e, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x75, 0x65, 0x73, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f,
	0x73, 0x12, 0x5d, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x69,
	0x6f, 0x6e, 0x65, 0x73, 0x50, 0x6f, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x12, 0x1d, 0x2e,
	0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x75, 0x64, 0x50, 0x6f, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x6f, 0x1a, 0x22, 0x2e, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x4f, 0x0a, 0x16, 0x4f, 0x62, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x75, 0x64,
	0x50, 0x6f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x44, 0x54,
	0x4f, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x69, 0x6f, 0x73,
	0x5f, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_canciones_proto_rawDescOnce sync.Once
	file_canciones_proto_rawDescData = file_canciones_proto_rawDesc
)

func file_canciones_proto_rawDescGZIP() []byte {
	file_canciones_proto_rawDescOnce.Do(func() {
		file_canciones_proto_rawDescData = protoimpl.X.CompressGZIP(file_canciones_proto_rawDescData)
	})
	return file_canciones_proto_rawDescData
}

var file_canciones_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_canciones_proto_goTypes = []interface{}{
	(*GeneroDTO)(nil),               // 0: canciones.GeneroDTO
	(*CancionDTO)(nil),              // 1: canciones.CancionDTO
	(*CancionInfoListaDTO)(nil),     // 2: canciones.CancionInfoListaDTO
	(*SolicitudVacia)(nil),          // 3: canciones.SolicitudVacia
	(*RespuestaListaGeneros)(nil),   // 4: canciones.RespuestaListaGeneros
	(*SolicitudPorGenero)(nil),      // 5: canciones.SolicitudPorGenero
	(*RespuestaListaCanciones)(nil), // 6: canciones.RespuestaListaCanciones
	(*SolicitudPorCancion)(nil),     // 7: canciones.SolicitudPorCancion
}
var file_canciones_proto_depIdxs = []int32{
	0, // 0: canciones.CancionDTO.genero:type_name -> canciones.GeneroDTO
	0, // 1: canciones.RespuestaListaGeneros.generos:type_name -> canciones.GeneroDTO
	2, // 2: canciones.RespuestaListaCanciones.canciones:type_name -> canciones.CancionInfoListaDTO
	3, // 3: canciones.ServicioCanciones.ListarGeneros:input_type -> canciones.SolicitudVacia
	5, // 4: canciones.ServicioCanciones.ListarCancionesPorGenero:input_type -> canciones.SolicitudPorGenero
	7, // 5: canciones.ServicioCanciones.ObtenerDetallesCancion:input_type -> canciones.SolicitudPorCancion
	4, // 6: canciones.ServicioCanciones.ListarGeneros:output_type -> canciones.RespuestaListaGeneros
	6, // 7: canciones.ServicioCanciones.ListarCancionesPorGenero:output_type -> canciones.RespuestaListaCanciones
	1, // 8: canciones.ServicioCanciones.ObtenerDetallesCancion:output_type -> canciones.CancionDTO
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_canciones_proto_init() }
func file_canciones_proto_init() {
	if File_canciones_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_canciones_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneroDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancionDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancionInfoListaDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolicitudVacia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespuestaListaGeneros); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolicitudPorGenero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespuestaListaCanciones); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_canciones_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolicitudPorCancion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_canciones_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_canciones_proto_goTypes,
		DependencyIndexes: file_canciones_proto_depIdxs,
		MessageInfos:      file_canciones_proto_msgTypes,
	}.Build()
	File_canciones_proto = out.File
	file_canciones_proto_rawDesc = nil
	file_canciones_proto_goTypes = nil
	file_canciones_proto_depIdxs = nil
}
